# Normalize `open` across Linux, macOS, and Windows.
# This is needed to make the `o` function (see below) cross-platform.
if [ ! $(uname -s) = 'Darwin' ]; then
	if grep -q Microsoft /proc/version; then
		# Ubuntu on Windows using the Linux subsystem
		alias open='explorer.exe';
	else
		alias open='xdg-open';
	fi
fi

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}


# Core systems dotfile
# helper functions and aliases

core_clean () {
	find . -name "node_modules" -type d -exec rm -rf '{}' +
        find ./cs-components -name "release" -type d  | grep -v node_modules | xargs rm -rf {}
        find ./cs-node-modules/server-infrastructure -name "lib" -type d | grep -v node_modules | xargs rm -rf {}
}

function windir() {
	echo $1 | sed -E 's;^/c/;C:\\;' | sed -e 's;/;\\;'
}

echo "(OK) .functions"
